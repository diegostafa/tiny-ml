// --------
(* TESTS *)
// --------

// TEST OPERATORS
// let a = 1 in
// let a = true in
// let a = 1.2 in
// let a = () in
// let a = "ciao" in
// let a = 'a' in
// let a = (1,"ciao", 'a', fun x -> x + 1, if true then 2 else 1) in
// let a: int = 1 in
// let a: bool = true in
// let a: float = 1.2 in
// let a: unit = () in
// let a: string = "ciao" in
// let a: char = 'a' in
// let a = 1 + 1 in
// let a = 1.0 + 1.0 in
// let a = 1 + 1.0 in
// let a = 1.0 + 1 in
// let a = 1 - 1 in
// let a = 1.0 - 1.0 in
// let a = 1 - 1.0 in
// let a = 1.0 - 1 in
// let a = 1 * 1 in
// let a = 1.0 * 1.0 in
// let a = 1 * 1.0 in
// let a = 1.0 * 1 in
// let a = 1 / 1 in
// let a = 1.0 / 1.0 in
// let a = 1 / 1.0 in
// let a = 1.0 / 1 in
// let a = 1 > 1 in
// let a = 1 < 1 in
// let a = 1 >= 1 in
// let a = 1 <= 1 in
// let a = 1 = 1 in
// let a = 1 <> 1 in
// let a = true and true in
// let a = true or true in
// let a = not true in


// let a = 1 in
// let b = 2 in
// let c = 3 in
// if not (a > 1 and b <=c) then
// 	if 1 >= b and 1 <=c or 1 = 1 then
// 		not true
// 	else
// 		not not not true
// else
// 	not not not (2 >= 5)

// let a =
//     let id x = x in
//     (id 3, id "ciao", id true)
// in
// let e =
//     (fun id -> (id 3, id "ciao", id true)) (fun x -> x)
// in
// e
//(id id, id 1, id 2, id true, id (not true), id (let f = 23 in f +1))

let rec f x = if x = 1 then 1 else x*(f (x-1)) in f 4

